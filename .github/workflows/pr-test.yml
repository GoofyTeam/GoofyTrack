name: Pull Request Tests

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: 'app/yarn.lock'

      - name: Install dependencies
        run: cd app && yarn install --frozen-lockfile

      - name: Lint code
        run: cd app && yarn lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    services:
      mariadb:
        image: mariadb:10.9
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: goofytrack
          MYSQL_USER: goofyuser
          MYSQL_PASSWORD: goofypassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: 'app/yarn.lock'

      - name: Install dependencies
        run: cd app && yarn install --frozen-lockfile

      - name: Set up database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -prootpassword goofytrack < ./docker/mariadb/init/01-init.sql

      - name: Run tests
        run: cd app && yarn test
        env:
          DATABASE_URL: mysql://goofyuser:goofypassword@localhost:3306/goofytrack

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'app/yarn.lock'

      - name: Install dependencies
        run: cd app && yarn install --frozen-lockfile

      - name: Build application
        run: cd app && yarn build
